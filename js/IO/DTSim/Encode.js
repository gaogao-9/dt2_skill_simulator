(function(global){
	"use strict";
	
	global.IO = global.IO || {};
	global.IO.DTSim = global.IO.DTSim || {};
	global.IO.DTSim.Encode = Encode; //Encode(jobNameArr:String[],skillArr:uint[],powderNum:uint):String
	
	var strEnc64 = ["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","*","-"];
	var skillEncHuffman = ["0","1110","1111100","1111101","1111110","10","1111010","1111011","111100","1111111","110"];
	var powderEncHuffman = ["0","1000000","1000001","1000010","1000011","1000100","1000101","1000110","1000111","1001000","1001001","1001010","1001011","1001100","1001101","1001110","1001111","1010000","1010001","1010010","1010011","1010100","1010101","1010110","1010111","1011000","1011001","1011010","1011011","1011100","1011101","1011110","1011111","110000000","110000001","110000010","110000011","110000100","110000101","110000110","110000111","110001000","110001001","110001010","110001011","110001100","110001101","110001110","110001111","110010000","110010001","110010010","110010011","110010100","110010101","110010110","110010111","110011000","110011001","110011010","110011011","110011100","110011101","110011110","110011111","110100000","110100001","110100010","110100011","110100100","110100101","110100110","110100111","110101000","110101001","110101010","110101011","110101100","110101101","110101110","110101111","110110000","110110001","110110010","110110011","110110100","110110101","110110110","110110111","110111000","110111001","110111010","110111011","110111100","110111101","110111110","110111111","111000000","111000001","111000010","111000011","111000100","111000101","111000110","111000111","111001000","111001001","111001010","111001011","111001100","111001101","111001110","111001111","111010000","111010001","111010010","111010011","111010100","111010101","111010110","111010111","111011000","111011001","111011010","111011011","111011100","111011101","111011110","111011111","111100000","111100001","111100010","111100011","111100100","111100101","111100110","111100111","111101000","111101001","111101010","111101011","111101100","111101101","111101110","111101111","111110000","111110001","111110010","111110011","111110100","111110101","111110110","111110111","111111000000","111111000001","111111000010","111111000011","111111000100","111111000101","111111000110","111111000111","111111001000","111111001001","111111001010","111111001011","111111001100","111111001101","111111001110","111111001111","111111010000","111111010001","111111010010","111111010011","111111010100","111111010101","111111010110","111111010111","111111011000","111111011001","111111011010","111111011011","111111011100","111111011101","111111011110","111111011111","111111100000","111111100001","111111100010","111111100011","111111100100","111111100101","111111100110","111111100111","111111101000","111111101001","111111101010","111111101011","111111101100","111111101101","111111101110","111111101111","1111111100000","1111111100001","1111111100010","1111111100011","1111111100100","1111111100101","1111111100110","1111111100111","1111111101000","1111111101001","1111111101010","1111111101011","1111111101100","1111111101101","1111111101110","1111111101111","1111111110000","1111111110001","1111111110010","1111111110011","1111111110100","1111111110101","1111111110110","1111111110111","111111111100000","111111111100001","111111111100010","111111111100011","111111111100100","111111111100101","111111111100110","111111111100111","111111111101000","111111111101001","111111111101010","111111111101011","111111111101100","111111111101101","111111111101110","111111111101111","111111111110000","111111111110001","111111111110010","111111111110011","111111111110100","111111111110101","111111111110110","111111111110111","111111111111000","111111111111001","111111111111010","111111111111011","111111111111100","111111111111101","111111111111110","111111111111111"];
	
	function Encode(jobNameArr,skillArr,powderNum){
		var output = "";
		
		var jobBit = GetJobBit(jobNameArr);
		var skillBit = EncodeSkill(jobBit,skillArr);
		var powderBit = GetPowderBit(powderNum);
		
		var bStr = jobBit + skillBit + powderBit;
		//ビット長がちょうど6の倍数になるようにパディングを入れる(64進数は6bitで表現可能なので)
		while(bStr.length%6){
			bStr += "0";
		}
		
		var bArr = bStr.split(/([01]{6})/).filter(function(e,i){return i&1});
		
		for(var i=0,iLen=bArr.length;i<iLen;++i){
			output += strEnc64[parseInt(bArr[i],2)];
		}
		return output;
	}
	
	function EncodeSkill(jobBit,skillArr){
		var bStr  = "";
		var bStr2 = "";
		if((typeof(skillArr)!=="object") || !isFinite(skillArr.length)) throw new Error("IO.DTSim.Encode: skillArrが配列ではありません("+skillArr+")");
		
		var skillLength = global.IO.DTSim.GetJobSkillLength(jobBit);
		for(var i=0,item;item=skillArr[i]|0,i<skillLength;++i){
			if(!isFinite(item) || (item<0) || (item>10)) throw new Error("IO.DTSim.Encode: skillArr["+i+"]の値が不正です("+item+")");
			bStr  += skillEncHuffman[item];
			bStr2 += ("000"+item.toString(2)).slice(-4);
		}
		
		return (bStr.length<bStr2.length) ? ("0"+bStr) : ("1"+bStr2);
	}
	
	
	function GetJobBit(jobNameArr){
		if(jobNameArr.length !== 3) throw new Error("IO.DTSim.Encode: jobNameArrの値が不正です。");
		
		switch(jobNameArr.join("")){
			case "ファイターパラディンヴァルキリー":
				return "00000";
			case "ファイターパラディン侍":
				return "00001";
			case "ファイターバーサーカー侍":
				return "00010";
			case "ファイターバーサーカーダークロード":
				return "00011";
			case "マジックユーザーソーサレスウィッチ":
				return "00100";
			case "マジックユーザーソーサレスマジカルプリンセス":
				return "00101";
			case "マジックユーザーエンチャントレスマジカルプリンセス":
				return "00110";
			case "マジックユーザーエンチャントレスセージ":
				return "00111";
			case "マジックユーザープリーステスセージ":
				return "01000";
			case "マジックユーザープリーステスビショップ":
				return "01001";
			case "スカウトアーチャースナイパー":
				return "01010";
			case "スカウトアーチャートレジャーハンター":
				return "01011";
			case "スカウトアサシントレジャーハンター":
				return "01100";
			case "スカウトアサシンくノ一":
				return "01101";
			case "メイドバードディーヴァ":
				return "01110";
			case "メイドバードミストレス":
				return "01111";
			case "メイドダンサーミストレス":
				return "10000";
			case "メイドダンサーエトワール":
				return "10001";
			case "スピエラードールマスターソウルサモナー":
				return "10010";
			case "スピエラードールマスターパピヨン":
				return "10011";
			case "スピエラートリックスターパピヨン":
				return "10100";
			case "スピエラートリックスタージョーカー":
				return "10101";
		}
		
		throw new Error("IO.DTSim.Encode: jobNameArrの値が不正です(["+jobNameArr.join(",")+"])");
	}
	
	function GetPowderBit(powderNum){
		powderNum |= 0;
		if(!isFinite(powderNum) || powderNum<0 || powderNum>256) throw new Error("IO.DTSim.Encode: powderNumの値が不正です("+powderNum+")");
		return powderEncHuffman[powderNum];
	}
})((this || 0).self || global);
